on:
  push:
    tags:
      - 'v*'

name: Release

jobs:
  run:
    name: Create release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Extract release notes
        id: release_notes
        run: |
          text=$(awk '/^## ${{ github.ref }}$/{flag=1;next}/^##/{flag=0}flag' CHANGELOG.md)
          if [[ "$text" -eq "" ]]; then
            echo "::error file=CHANGELOG.md::There is no release notes for ${{ github.ref }}"
            exit 1
          fi
          echo "::set-output name=text::$text"
      - name: Create ${{ github.ref }} release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: ${{ steps.release_notes.outputs.text }}
          draft: true
          prerelease: false
      - name: Upload binaries
        id: upload_binaries
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/something.zip
          asset_name: something_${{ github.ref}}.zip
          asset_content_type: application/zip