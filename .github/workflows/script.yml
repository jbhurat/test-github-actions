name: Status Management using script
on:
  push:
    branches:
      - master
jobs:
  job1:
    name: Failed job
    runs-on: ubuntu-latest
    steps:
      - name: Step 1
        run: |
          echo "Job failed on purpose"
          cat foo
  job11:
    name: Dependent job
    if: success()
    needs:
      - job1
    runs-on: ubuntu-latest
    steps:
      - name: Step 1
        run: echo "Step 1"  
  job2:
    name: Job 2
    runs-on: ubuntu-latest
    steps:
      - name: Step 1
        run: |
          echo "${{ toJson(job) }}"
  notify:
    if: always()
    name: Notify
    needs:
      - job1
      - job2
      - job11
    runs-on: ubuntu-latest
    steps:
      - name: Prepare message
        id: status
        uses: actions/github-script@0.8.0
        with:
          script: |
            console.log("get workflow run")
            const wf_run = await github.actions.getWorkflowRun({
                owner: context.repo.owner,
                repo: context.repo.repo,
                run_id: ${{ github.run_id }}
            })
            console.log("get jobs for workflow run")
            const jobs_response = await github.request(wf_run.data.jobs_url)
            console.log(jobs_response)
            var fields = []
            var workflow_conclusion = "success"
            for j of jobs_response.data.jobs {
                fields.push({
                    type: "mrkdwn",
                    text: "j.conclusion - j.name"
                })
                if j.conclusion != 'success' {
                    workflow_conclusion = "failure"
                }
            }
            // can do all kind of javascript magic here to format the right message
            var slack_msg = {
                blocks: [
                    {
                        type: "section",
                        fields: fields
                    }
                ]
            }
            return slack_msg
      - name: Notify
        run: |
          echo '${{ steps.status.outputs.result }}'